openapi: 3.0.0
info:
  title: User API
  description: 사용자 정보 관리 API
  version: 0.0.2
servers:
  - url: https://dev.not-available-yet.com
    description: Development
  - url: https://not-available-yet.com
    description: Production
paths:
  /v1/users:
    post:
      summary: 사용자 회원가입 API
      requestBody:
        $ref: "#/components/requestBodies/UserSignUpRequest"
      responses:
        201:
          description: "회원가입 성공"
  /v1/users/mates:
    get:
      summary: 메이트 탐색 API
      description: |
        메이트 매칭을 위한 필터링이 적용된 사용자 목록을 조회합니다.
        
        ** 검색 조건 (항상 적용됨) **
        - 나와 같은 동네(지역3, 동/읍/면)에 사는 사용자
        - 현재 메이트가 없는 사용자
      security:
        - bearerAuth: [ ]
      parameters:
        - name: peferredTimes
          in: query
          required: false
          schema:
            type: array
            items:
              enum: [ "WEEKDAY_MORNING", "WEEKDAY_AFTERNOON", "WEEKDAY_EVENING", "WEEKEND_MORNING", "WEEKEND_AFTERNOON", "WEEKEND_EVENING" ]
            description: "선호하는 시간대"
        - name: workoutTypes
          in: query
          required: false
          schema:
            type: array
            items:
              enum: [ "GYM", "PILATES", "SWIMMING", "DANCE", "SQUASH", "BOXING", "GOLF", "TENNIS", "YOGA", "CROSSFIT" ]
            description: "운동 종목 (GET v1/workout-types 로 확인 가능)"
        - name: page
          in: query
          description: "페이지 번호(1부터 시작) / 기본값: 1"
          required: false
          schema:
            type: integer
            example: 1
        - name: size
          in: query
          description: "페이지 크기 / 기본값: 10"
          required: false
          schema:
            type: integer
            example: 10
      responses:
        200:
          $ref: "#/components/responses/PagedUserInfoResponse"
  /v1/users/{id}:
    get:
      summary: 사용자 상세 조회 API
      security:
        - bearerAuth: [ ]
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            example: 1
            description: "사용자 ID"
      responses:
        200:
          $ref: "#/components/responses/DetailedUserInfoResponse"
        404:
          description: "사용자 정보 없음"
  /v1/users/me:
    get:
      summary: 내 정보 조회 API
      security:
        - bearerAuth: [ ]
      responses:
        200:
          $ref: "#/components/responses/DetailedUserInfoResponse"
    delete:
      summary: 회원 탈퇴 API
      security:
        - bearerAuth: [ ]
      responses:
        204:
          description: "회원 탈퇴 성공"
        404:
          description: "사용자 정보 없음"
  /v1/users/me/basic-info:
    patch:
      summary: 내 기본 정보 수정 API
      description: |
        사용자의 기본 정보를 수정할 수 있습니다.
        요청 본문에는 변경하려는 필드만 포함하면 되며, 기존 값을 유지하려는 필드는 제외할 수 있습니다.
        - 수정 가능한 필드: 닉네임, 나이, 지역, 운동 실력
      security:
        - bearerAuth: [ ]
      requestBody:
        $ref: "#/components/requestBodies/UserBasicInfoUpdateRequest"
      responses:
        200:
          description: "사용자 기본 정보 수정 성공"
  /v1/users/me/profile:
    put:
      summary: 내 프로필 수정 API
      description: |
        사용자의 프로필 정보를 수정할 수 있습니다.
        기존 데이터를 새로운 데이터로 대체합니다. 요청 시 모든 필드를 전달해야 합니다.
        - 수정 가능한 필드: 자기소개, 오픈 채팅 URL
      security:
        - bearerAuth: [ ]
      requestBody:
        $ref: "#/components/requestBodies/UserProfileUpdateRequest"
      responses:
        200:
          description: "사용자 프로필 수정 성공"
  /v1/users/me/profile-image:
    put:
      summary: 내 프로필 이미지 수정 API
      description: |
        사용자의 프로필 이미지를 수정할 수 있습니다.
        - 지원하는 확장자: .jpg, .jpeg, .png, .heic, .webp
      security:
        - bearerAuth: [ ]
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              required:
                - profileImage
              properties:
                profileImage:
                  type: string
                  format: binary
                  description: "프로필 이미지 파일"
      responses:
        200:
          description: "사용자 프로필 이미지 수정 성공"
  /v1/users/me/workout-preferences:
    put:
      summary: 내 운동 선호 정보 수정 API
      description: |
        사용자의 운동 선호 정보를 수정할 수 있습니다.
        기존 데이터를 새로운 데이터로 대체합니다. 요청 시 모든 필드를 전달해야 합니다.
        - 수정 가능한 필드: 선호하는 운동 시간대, 선호하는 운동 종목, 선호하는 운동 시설(장소)
      security:
        - bearerAuth: [ ]
      requestBody:
        $ref: "#/components/requestBodies/UserWorkoutPreferencesUpdateRequest"
      responses:
        200:
          description: "사용자 운동 선호 정보 수정 성공"
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  requestBodies:
    UserSignUpRequest:
      description: "회원가입 요청"
      required: true
      content:
        application/json:
          schema:
            type: object
            required:
              - oAuthId
              - provider
              - nickname
              - region1
              - region2
              - region3
              - gender
              - age
              - skillLevel
              - preferredWorkoutTime
              - favoriteWorkouts
            properties:
              oAuthId:
                type: string
                example: "57291628"
                description: "OAuth2 ID"
              provider:
                type: string
                enum: [ "KAKAO" ]
                description: "OAuth2 제공자"
              nickname:
                type: string
                example: "닉네임입니다"
                description: "닉네임"
              region1:
                type: string
                example: "서울특별시"
                description: "지역(시/도)"
              region2:
                type: string
                example: "송파구"
                description: "지역(시/군/구)"
              region3:
                type: string
                example: "잠실동"
                description: "지역(읍/면/동)"
              gender:
                type: string
                enum: [ 'F', 'M' ]
                description: "성별"
              age:
                type: integer
                example: 20
                description: "나이"
                minimum: 15
                maximum: 70
              skillLevel:
                type: string
                enum: [ 'BEGINNER', 'INTERMEDIATE', 'ADVANCED' ]
                description: "운동 실력"
              preferredWorkoutTime:
                type: array
                items:
                  type: string
                  enum: [ "WEEKDAY_MORNING", "WEEKDAY_AFTERNOON", "WEEKDAY_EVENING", "WEEKEND_MORNING", "WEEKEND_AFTERNOON", "WEEKEND_EVENING" ]
                description: "선호하는 시간대"
              favoriteWorkouts:
                type: array
                items:
                  type: string
                  enum: [ "GYM", "PILATES", "SWIMMING", "DANCE", "SQUASH", "BOXING", "GOLF", "TENNIS", "YOGA", "CROSSFIT" ]
                  description: "운동 종목 코드"
                description: "선호하는 운동 종목"
    UserBasicInfoUpdateRequest:
      description: "사용자 기본 정보 수정 요청"
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              nickname:
                type: string
                example: "닉네임입니다"
                description: "변경할 닉네임"
              age:
                type: integer
                example: 20
                description: "변경할 나이"
                minimum: 15
                maximum: 70
              region1:
                type: string
                example: "서울특별시"
                description: "변경할 지역(시/도)"
              region2:
                type: string
                example: "송파구"
                description: "변경할 지역(시/군/구)"
              region3:
                type: string
                example: "잠실동"
                description: "변경할 지역(읍/면/동)"
              skillLevel:
                type: string
                enum: [ 'BEGINNER', 'INTERMEDIATE', 'ADVANCED' ]
                description: "변경할 운동 실력"
    UserProfileUpdateRequest:
      description: "사용자 프로필(자기소개, 오픈 채팅 URL) 등록/수정 요청"
      required: true
      content:
        application/json:
          schema:
            type: object
            required:
              - introduction
              - openChatUrl
            properties:
              introduction:
                type: string
                example: "안녕하세요. 자기소개입니다."
                description: "변경할 자기소개"
              openChatUrl:
                type: string
                format: uri
                example: "https://open.kakao.com/o/gjgjgjgj"
                description: "변경할 오픈 채팅 URL"
    UserWorkoutPreferencesUpdateRequest:
      description: "사용자 운동 선호 정보(선호하는 운동 종목, 운동 시설) 등록/수정 요청"
      required: true
      content:
        application/json:
          schema:
            type: object
            required:
              - preferredWorkoutTime
              - favoriteWorkouts
              - favoritePlaces
            properties:
              preferredWorkoutTime:
                type: string
                enum: [ 'WEEKDAY_MORNING', 'WEEKDAY_AFTERNOON', 'WEEKDAY_EVENING', 'WEEKEND_MORNING', 'WEEKEND_AFTERNOON', 'WEEKEND_EVENING' ]
                description: "변경할 선호하는 운동 시간대"
              favoriteWorkouts:
                type: array
                items:
                  type: string
                  enum: [ "GYM", "PILATES", "SWIMMING", "DANCE", "SQUASH", "BOXING", "GOLF", "TENNIS", "YOGA", "CROSSFIT" ]
                  description: "운동 종목 코드"
                description: "변경할 선호하는 운동 종목"
              favoritePlaces:
                type: array
                items:
                  type: object
                  properties:
                    placeName:
                      type: string
                      example: "에이블짐 잠실점"
                      description: "운동 시설 이름"
                    address:
                      type: string
                      example: "서울특별시 송파구 올림픽로35가길 11 지하1층 001호"
                      description: "운동 시설 주소"
                description: "변경할 선호하는 운동 시설"
  responses:
    PagedUserInfoResponse:
      description: "사용자 목록 조회 응답"
      content:
        application/json:
          schema:
            allOf:
              - $ref: "schemas.yaml#/components/schemas/PageResponse"
              - type: object
                properties:
                  data:
                    type: object
                    properties:
                      content:
                        type: array
                        items:
                          $ref: "#/components/schemas/BasicUserInfoResponse"
    DetailedUserInfoResponse:
      description: "사용자 상세 조회 응답"
      content:
        application/json:
          schema:
            allOf:
              - $ref: "schemas.yaml#/components/schemas/BaseResponse"
              - type: object
                properties:
                  data:
                    $ref: "#/components/schemas/DetailedUserInfoResponse"
  schemas:
    BasicUserInfoResponse:
      type: object
      properties:
        id:
          type: number
          example: 1
          description: "사용자 ID"
          nullable: false
        profileUrl:
          type: string
          format: uri
          example: "https://example.com/profile.jpg"
          description: "프로필 이미지 URL"
          nullable: true
        nickname:
          type: string
          example: "닉네임입니다"
          description: "닉네임"
          nullable: false
        gender:
          type: string
          enum: [ 'F', 'M' ]
          description: "성별"
          nullable: false
        skillLevel:
          type: string
          enum: [ 'BEGINNER', 'INTERMEDIATE', 'ADVANCED' ]
          description: "운동 실력"
          nullable: false
        introduction:
          type: string
          example: "안녕하세요. 자기소개입니다."
          description: "소개"
          nullable: true
        preferredWorkoutTime:
          type: array
          items:
            type: string
            enum: [ "WEEKDAY_MORNING", "WEEKDAY_AFTERNOON", "WEEKDAY_EVENING", "WEEKEND_MORNING", "WEEKEND_AFTERNOON", "WEEKEND_EVENING" ]
          description: "선호하는 시간대"
          nullable: false
        favoriteWorkouts:
          type: array
          items:
            type: object
            properties:
              code:
                type: string
                enum: [ "GYM", "PILATES", "SWIMMING", "DANCE", "SQUASH", "BOXING", "GOLF", "TENNIS", "YOGA", "CROSSFIT" ]
                description: "운동 종목 코드"
                nullable: false
              name:
                type: string
                enum: [ "헬스", "필라테스", "수영", "댄스", "스쿼시", "복싱", "골프", "테니스", "요가", "크로스핏" ]
                description: "운동 종목 이름"
                nullable: false
            description: "운동 종목 정보"
            nullable: false
          description: "선호하는 운동 종목"
          nullable: false
    DetailedUserInfoResponse:
      type: object
      properties:
        id:
          type: number
          example: 1
          description: "사용자 ID"
          nullable: false
        profileUrl:
          type: string
          format: uri
          example: "https://example.com/profile.jpg"
          description: "프로필 이미지 URL"
          nullable: true
        nickname:
          type: string
          example: "닉네임입니다"
          description: "닉네임"
          nullable: false
        gender:
          type: string
          enum: [ 'F', 'M' ]
          description: "성별"
          nullable: false
        skillLevel:
          type: string
          enum: [ 'BEGINNER', 'INTERMEDIATE', 'ADVANCED' ]
          description: "운동 실력"
          nullable: false
        introduction:
          type: string
          example: "안녕하세요. 자기소개입니다."
          description: "소개"
          nullable: true
        preferredWorkoutTime:
          type: array
          items:
            type: string
            enum: [ "WEEKDAY_MORNING", "WEEKDAY_AFTERNOON", "WEEKDAY_EVENING", "WEEKEND_MORNING", "WEEKEND_AFTERNOON", "WEEKEND_EVENING" ]
          description: "선호하는 시간대"
          nullable: false
        favoriteWorkouts:
          type: array
          items:
            type: object
            properties:
              code:
                type: string
                enum: [ "GYM", "PILATES", "SWIMMING", "DANCE", "SQUASH", "BOXING", "GOLF", "TENNIS", "YOGA", "CROSSFIT" ]
                description: "운동 종목 코드"
                nullable: false
              name:
                type: string
                enum: [ "헬스", "필라테스", "수영", "댄스", "스쿼시", "복싱", "골프", "테니스", "요가", "크로스핏" ]
                description: "운동 종목 이름"
                nullable: false
            description: "운동 종목 정보"
            nullable: false
          description: "선호하는 운동 종목"
          nullable: false
        favoritePlaces:
          type: array
          items:
            type: object
            properties:
              placeName:
                type: string
                example: "에이블짐 잠실점"
                description: "운동 시설 이름"
                nullable: false
              address:
                type: string
                example: "서울특별시 송파구 올림픽로35가길 11 지하1층 001호"
                description: "운동 시설 주소"
                nullable: false
            description: "운동 시설 정보"
            nullable: false
          description: "선호하는 운동 시설"
          nullable: false
        createdAt:
          type: string
          format: date-time
          example: "2025-02-01T15:33:30"
          description: "가입 일시"
          nullable: false
        nicknameUpdatedAt:
          type: string
          format: date-time
          example: "2025-02-05T12:21:30"
          description: "닉네임 수정 일시"
          nullable: true